/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/_error";
exports.ids = ["pages/_error"];
exports.modules = {

/***/ "(pages-dir-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F_error&preferredRegion=&absolutePagePath=private-next-pages%2F_error&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F_error&preferredRegion=&absolutePagePath=private-next-pages%2F_error&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getServerSideProps: () => (/* binding */ getServerSideProps),\n/* harmony export */   getStaticPaths: () => (/* binding */ getStaticPaths),\n/* harmony export */   getStaticProps: () => (/* binding */ getStaticProps),\n/* harmony export */   reportWebVitals: () => (/* binding */ reportWebVitals),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   unstable_getServerProps: () => (/* binding */ unstable_getServerProps),\n/* harmony export */   unstable_getServerSideProps: () => (/* binding */ unstable_getServerSideProps),\n/* harmony export */   unstable_getStaticParams: () => (/* binding */ unstable_getStaticParams),\n/* harmony export */   unstable_getStaticPaths: () => (/* binding */ unstable_getStaticPaths),\n/* harmony export */   unstable_getStaticProps: () => (/* binding */ unstable_getStaticProps)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages/module.compiled */ \"(pages-dir-node)/./node_modules/next/dist/server/route-modules/pages/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(pages-dir-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(pages-dir-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var private_next_pages_document__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! private-next-pages/_document */ \"(pages-dir-node)/./src/pages/_document.tsx\");\n/* harmony import */ var private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! private-next-pages/_app */ \"(pages-dir-node)/./src/pages/_app.tsx\");\n/* harmony import */ var private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! private-next-pages/_error */ \"(pages-dir-node)/./node_modules/next/dist/pages/_error.js\");\n/* harmony import */ var private_next_pages_error__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__]);\nprivate_next_pages_app__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the app and document modules.\n\n\n// Import the userland code.\n\n// Re-export the component (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__, 'default'));\n// Re-export methods.\nconst getStaticProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__, 'getStaticProps');\nconst getStaticPaths = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__, 'getStaticPaths');\nconst getServerSideProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__, 'getServerSideProps');\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__, 'config');\nconst reportWebVitals = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__, 'reportWebVitals');\n// Re-export legacy methods.\nconst unstable_getStaticProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__, 'unstable_getStaticProps');\nconst unstable_getStaticPaths = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__, 'unstable_getStaticPaths');\nconst unstable_getStaticParams = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__, 'unstable_getStaticParams');\nconst unstable_getServerProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__, 'unstable_getServerProps');\nconst unstable_getServerSideProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__, 'unstable_getServerSideProps');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES,\n        page: \"/_error\",\n        pathname: \"/_error\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    components: {\n        // default export might not exist when optimized for data only\n        App: private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n        Document: private_next_pages_document__WEBPACK_IMPORTED_MODULE_3__[\"default\"]\n    },\n    userland: private_next_pages_error__WEBPACK_IMPORTED_MODULE_5__\n});\n\n//# sourceMappingURL=pages.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVMmcGFnZT0lMkZfZXJyb3ImcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPXByaXZhdGUtbmV4dC1wYWdlcyUyRl9lcnJvciZhYnNvbHV0ZUFwcFBhdGg9cHJpdmF0ZS1uZXh0LXBhZ2VzJTJGX2FwcCZhYnNvbHV0ZURvY3VtZW50UGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfZG9jdW1lbnQmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXdGO0FBQ2hDO0FBQ0U7QUFDMUQ7QUFDeUQ7QUFDVjtBQUMvQztBQUNzRDtBQUN0RDtBQUNBLGlFQUFlLHdFQUFLLENBQUMscURBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sdUJBQXVCLHdFQUFLLENBQUMscURBQVE7QUFDckMsdUJBQXVCLHdFQUFLLENBQUMscURBQVE7QUFDckMsMkJBQTJCLHdFQUFLLENBQUMscURBQVE7QUFDekMsZUFBZSx3RUFBSyxDQUFDLHFEQUFRO0FBQzdCLHdCQUF3Qix3RUFBSyxDQUFDLHFEQUFRO0FBQzdDO0FBQ08sZ0NBQWdDLHdFQUFLLENBQUMscURBQVE7QUFDOUMsZ0NBQWdDLHdFQUFLLENBQUMscURBQVE7QUFDOUMsaUNBQWlDLHdFQUFLLENBQUMscURBQVE7QUFDL0MsZ0NBQWdDLHdFQUFLLENBQUMscURBQVE7QUFDOUMsb0NBQW9DLHdFQUFLLENBQUMscURBQVE7QUFDekQ7QUFDTyx3QkFBd0Isa0dBQWdCO0FBQy9DO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxhQUFhLDhEQUFXO0FBQ3hCLGtCQUFrQixtRUFBZ0I7QUFDbEMsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELGlDIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvcGFnZXMvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgYXBwIGFuZCBkb2N1bWVudCBtb2R1bGVzLlxuaW1wb3J0ICogYXMgZG9jdW1lbnQgZnJvbSBcInByaXZhdGUtbmV4dC1wYWdlcy9fZG9jdW1lbnRcIjtcbmltcG9ydCAqIGFzIGFwcCBmcm9tIFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJwcml2YXRlLW5leHQtcGFnZXMvX2Vycm9yXCI7XG4vLyBSZS1leHBvcnQgdGhlIGNvbXBvbmVudCAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgJ2RlZmF1bHQnKTtcbi8vIFJlLWV4cG9ydCBtZXRob2RzLlxuZXhwb3J0IGNvbnN0IGdldFN0YXRpY1Byb3BzID0gaG9pc3QodXNlcmxhbmQsICdnZXRTdGF0aWNQcm9wcycpO1xuZXhwb3J0IGNvbnN0IGdldFN0YXRpY1BhdGhzID0gaG9pc3QodXNlcmxhbmQsICdnZXRTdGF0aWNQYXRocycpO1xuZXhwb3J0IGNvbnN0IGdldFNlcnZlclNpZGVQcm9wcyA9IGhvaXN0KHVzZXJsYW5kLCAnZ2V0U2VydmVyU2lkZVByb3BzJyk7XG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsICdjb25maWcnKTtcbmV4cG9ydCBjb25zdCByZXBvcnRXZWJWaXRhbHMgPSBob2lzdCh1c2VybGFuZCwgJ3JlcG9ydFdlYlZpdGFscycpO1xuLy8gUmUtZXhwb3J0IGxlZ2FjeSBtZXRob2RzLlxuZXhwb3J0IGNvbnN0IHVuc3RhYmxlX2dldFN0YXRpY1Byb3BzID0gaG9pc3QodXNlcmxhbmQsICd1bnN0YWJsZV9nZXRTdGF0aWNQcm9wcycpO1xuZXhwb3J0IGNvbnN0IHVuc3RhYmxlX2dldFN0YXRpY1BhdGhzID0gaG9pc3QodXNlcmxhbmQsICd1bnN0YWJsZV9nZXRTdGF0aWNQYXRocycpO1xuZXhwb3J0IGNvbnN0IHVuc3RhYmxlX2dldFN0YXRpY1BhcmFtcyA9IGhvaXN0KHVzZXJsYW5kLCAndW5zdGFibGVfZ2V0U3RhdGljUGFyYW1zJyk7XG5leHBvcnQgY29uc3QgdW5zdGFibGVfZ2V0U2VydmVyUHJvcHMgPSBob2lzdCh1c2VybGFuZCwgJ3Vuc3RhYmxlX2dldFNlcnZlclByb3BzJyk7XG5leHBvcnQgY29uc3QgdW5zdGFibGVfZ2V0U2VydmVyU2lkZVByb3BzID0gaG9pc3QodXNlcmxhbmQsICd1bnN0YWJsZV9nZXRTZXJ2ZXJTaWRlUHJvcHMnKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTLFxuICAgICAgICBwYWdlOiBcIi9fZXJyb3JcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL19lcnJvclwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6ICcnLFxuICAgICAgICBmaWxlbmFtZTogJydcbiAgICB9LFxuICAgIGNvbXBvbmVudHM6IHtcbiAgICAgICAgLy8gZGVmYXVsdCBleHBvcnQgbWlnaHQgbm90IGV4aXN0IHdoZW4gb3B0aW1pemVkIGZvciBkYXRhIG9ubHlcbiAgICAgICAgQXBwOiBhcHAuZGVmYXVsdCxcbiAgICAgICAgRG9jdW1lbnQ6IGRvY3VtZW50LmRlZmF1bHRcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F_error&preferredRegion=&absolutePagePath=private-next-pages%2F_error&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(pages-dir-node)/./src/contexts/AuthContext.tsx":
/*!**************************************!*\
  !*** ./src/contexts/AuthContext.tsx ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/auth */ \"firebase/auth\");\n/* harmony import */ var _lib_firebase_firebase__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/firebase/firebase */ \"(pages-dir-node)/./src/lib/firebase/firebase.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([firebase_auth__WEBPACK_IMPORTED_MODULE_2__, _lib_firebase_firebase__WEBPACK_IMPORTED_MODULE_3__]);\n([firebase_auth__WEBPACK_IMPORTED_MODULE_2__, _lib_firebase_firebase__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n// src/contexts/AuthContext.tsx\n\n\n\n\n// Create the Auth Context\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\n// Auth Provider Component\nconst AuthProvider = ({ children })=>{\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [userUid, setUserUid] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    // We don't need to initialize Firebase in AuthContext\n    // as it's already initialized in _app.tsx\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            console.log(\"AuthContext mounted\");\n        }\n    }[\"AuthProvider.useEffect\"], []);\n    // Generate a stable mock user ID that persists across app sessions\n    const generateMockUserId = ()=>{\n        // First, try to get an existing mock user ID from localStorage for persistence\n        if (false) {}\n        // Fallback for SSR\n        return \"mock-\" + Math.random().toString(36).substring(2, 11);\n    };\n    // Listen for auth state changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            // If mock mode is enabled, skip Firebase auth\n            if (true) {\n                console.log(\"Using mock authentication mode\");\n                // Get or generate a mock user ID that persists\n                const mockUid = generateMockUserId();\n                // Store the mock user ID in sessionStorage for use across components\n                if (false) {}\n                setUser({\n                    uid: mockUid\n                });\n                setUserUid(mockUid);\n                setLoading(false);\n                return ({\n                    \"AuthProvider.useEffect\": ()=>{}\n                })[\"AuthProvider.useEffect\"];\n            }\n            try {\n                // Make sure Firebase is initialized\n                const firebaseApp = (0,_lib_firebase_firebase__WEBPACK_IMPORTED_MODULE_3__.initializeFirebase)(true, false);\n                // Use the auth instance from the initialized Firebase\n                const auth = firebaseApp.auth;\n                if (!auth) {\n                    console.error(\"Firebase auth is not initialized\");\n                    // Fallback to mock user if Firebase auth isn't available\n                    const mockUid = generateMockUserId();\n                    setUser({\n                        uid: mockUid\n                    });\n                    setUserUid(mockUid);\n                    // Store the mock user ID in sessionStorage\n                    if (false) {}\n                    setLoading(false);\n                    return ({\n                        \"AuthProvider.useEffect\": ()=>{}\n                    })[\"AuthProvider.useEffect\"];\n                }\n                console.log(\"Setting up auth state listener\");\n                const unsubscribe = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.onAuthStateChanged)(auth, {\n                    \"AuthProvider.useEffect.unsubscribe\": async (authUser)=>{\n                        console.log(\"Auth state changed:\", authUser ? `User: ${authUser.uid}` : \"No user\");\n                        if (authUser) {\n                            setUser(authUser);\n                            setUserUid(authUser.uid);\n                            try {\n                                // Initialize Firebase\n                                const { db } = (0,_lib_firebase_firebase__WEBPACK_IMPORTED_MODULE_3__.initializeFirebase)(true, false);\n                                // Check if user exists in Firestore, create if not\n                                if (db) {\n                                    const { doc, getDoc, setDoc } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! firebase/firestore */ \"firebase/firestore\"));\n                                    const userRef = doc(db, \"players\", authUser.uid);\n                                    const userDoc = await getDoc(userRef);\n                                    if (!userDoc.exists()) {\n                                        // Create new user document\n                                        await setDoc(userRef, {\n                                            uid: authUser.uid,\n                                            name: `Player_${authUser.uid.substring(0, 5)}`,\n                                            createdAt: new Date(),\n                                            highScores: {}\n                                        });\n                                        console.log(\"Created new user document in Firestore\");\n                                    }\n                                }\n                            } catch (error) {\n                                console.error(\"Error checking/creating user document:\", error);\n                            }\n                        } else {\n                            setUser(null);\n                            setUserUid(null);\n                        }\n                        setLoading(false);\n                    }\n                }[\"AuthProvider.useEffect.unsubscribe\"]);\n                // Cleanup subscription\n                return ({\n                    \"AuthProvider.useEffect\": ()=>unsubscribe()\n                })[\"AuthProvider.useEffect\"];\n            } catch (error) {\n                console.error(\"Error setting up auth state listener:\", error);\n                // Fallback to mock user if Firebase auth fails\n                const mockUid = generateMockUserId();\n                setUser({\n                    uid: mockUid\n                });\n                setUserUid(mockUid);\n                // Store the mock user ID in sessionStorage\n                if (false) {}\n                setLoading(false);\n                return ({\n                    \"AuthProvider.useEffect\": ()=>{}\n                })[\"AuthProvider.useEffect\"];\n            }\n        }\n    }[\"AuthProvider.useEffect\"], []);\n    // Sign in anonymously\n    const signInAnonymously = async ()=>{\n        try {\n            // Skip anonymous auth if it's not setup correctly to avoid errors\n            if (true) {\n                console.log(\"Skipping anonymous auth (NEXT_PUBLIC_SKIP_AUTH=true)\");\n                // Mock a user instead\n                const mockUid = generateMockUserId();\n                setUser({\n                    uid: mockUid\n                });\n                setUserUid(mockUid);\n                // Store the mock user ID in sessionStorage\n                if (false) {}\n                setLoading(false);\n                return;\n            }\n            // Make sure Firebase is initialized\n            const firebaseApp = (0,_lib_firebase_firebase__WEBPACK_IMPORTED_MODULE_3__.initializeFirebase)(true, false);\n            const auth = firebaseApp.auth;\n            if (!auth) {\n                throw new Error(\"Firebase auth is not initialized\");\n            }\n            console.log(\"Attempting anonymous sign in\");\n            await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.signInAnonymously)(auth);\n        } catch (error) {\n            console.error(\"Error signing in anonymously:\", error);\n            // If anonymous auth fails, mock a user to allow the app to function\n            const mockUid = generateMockUserId();\n            setUser({\n                uid: mockUid\n            });\n            setUserUid(mockUid);\n            // Store the mock user ID in sessionStorage\n            if (false) {}\n            setLoading(false);\n        }\n    };\n    // Sign out\n    const signOut = async ()=>{\n        try {\n            // If in mock mode, just clear the user state\n            if (true) {\n                setUser(null);\n                setUserUid(null);\n                // Clear the mock user ID from sessionStorage\n                if (false) {}\n                return;\n            }\n            // Make sure Firebase is initialized\n            const firebaseApp = (0,_lib_firebase_firebase__WEBPACK_IMPORTED_MODULE_3__.initializeFirebase)(true, false);\n            const auth = firebaseApp.auth;\n            if (!auth) {\n                throw new Error(\"Firebase auth is not initialized\");\n            }\n            await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.signOut)(auth);\n        } catch (error) {\n            console.error(\"Error signing out:\", error);\n            // Reset user state regardless of error\n            setUser(null);\n            setUserUid(null);\n            // Clear the mock user ID from sessionStorage\n            if (false) {}\n        }\n    };\n    // Auto sign in anonymously if not signed in\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            // Check if Firebase emulator is running\n            const isEmulator =  false && 0;\n            if (!loading && !user) {\n                console.log(\"Auto sign-in: No user detected, attempting anonymous sign in\");\n                if (isEmulator) {\n                    console.log(\"Using Firebase emulator for authentication\");\n                }\n                signInAnonymously();\n            }\n        }\n    }[\"AuthProvider.useEffect\"], [\n        loading,\n        user\n    ]);\n    // Context value\n    const value = {\n        user,\n        userUid,\n        loading,\n        signInAnonymously,\n        signOut\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: value,\n        children: !loading && children\n    }, void 0, false, {\n        fileName: \"/Users/alex/Developer/trendguesser/src/contexts/AuthContext.tsx\",\n        lineNumber: 291,\n        columnNumber: 5\n    }, undefined);\n};\n// Custom hook to use the auth context\nconst useAuth = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error(\"useAuth must be used within an AuthProvider\");\n    }\n    return context;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AuthContext);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./src/contexts/AuthContext.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./src/contexts/ConsentContext.tsx":
/*!*****************************************!*\
  !*** ./src/contexts/ConsentContext.tsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConsentProvider: () => (/* binding */ ConsentProvider),\n/* harmony export */   useConsent: () => (/* binding */ useConsent)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst defaultConsentState = {\n    analytics: false,\n    necessary: true,\n    localStorage: true,\n    firebase: true\n};\nconst defaultContext = {\n    consent: defaultConsentState,\n    setConsent: ()=>{},\n    hasSetConsent: false,\n    setHasSetConsent: ()=>{}\n};\nconst ConsentContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(defaultContext);\nconst useConsent = ()=>(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ConsentContext);\nconst ConsentProvider = ({ children })=>{\n    const [consent, setConsentState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(defaultConsentState);\n    const [hasSetConsent, setHasSetConsent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Load consent state from localStorage on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ConsentProvider.useEffect\": ()=>{\n            // Only attempt to read if localStorage is available\n            if (false) {}\n        }\n    }[\"ConsentProvider.useEffect\"], []);\n    // Update localStorage when consent changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ConsentProvider.useEffect\": ()=>{\n            // Only save if the user has explicitly set consent\n            if (hasSetConsent && \"undefined\" !== 'undefined') {}\n        }\n    }[\"ConsentProvider.useEffect\"], [\n        consent,\n        hasSetConsent\n    ]);\n    const setConsent = (newConsent)=>{\n        setConsentState((prev)=>({\n                ...prev,\n                ...newConsent\n            }));\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ConsentContext.Provider, {\n        value: {\n            consent,\n            setConsent,\n            hasSetConsent,\n            setHasSetConsent\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/alex/Developer/trendguesser/src/contexts/ConsentContext.tsx\",\n        lineNumber: 78,\n        columnNumber: 5\n    }, undefined);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL3NyYy9jb250ZXh0cy9Db25zZW50Q29udGV4dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUE4RTtBQWdCOUUsTUFBTUssc0JBQW9DO0lBQ3hDQyxXQUFXO0lBQ1hDLFdBQVc7SUFDWEMsY0FBYztJQUNkQyxVQUFVO0FBQ1o7QUFFQSxNQUFNQyxpQkFBcUM7SUFDekNDLFNBQVNOO0lBQ1RPLFlBQVksS0FBTztJQUNuQkMsZUFBZTtJQUNmQyxrQkFBa0IsS0FBTztBQUMzQjtBQUVBLE1BQU1DLCtCQUFpQmQsb0RBQWFBLENBQXFCUztBQUVsRCxNQUFNTSxhQUFhLElBQU1kLGlEQUFVQSxDQUFDYSxnQkFBZ0I7QUFFcEQsTUFBTUUsa0JBQTJELENBQUMsRUFBRUMsUUFBUSxFQUFFO0lBQ25GLE1BQU0sQ0FBQ1AsU0FBU1EsZ0JBQWdCLEdBQUdoQiwrQ0FBUUEsQ0FBZUU7SUFDMUQsTUFBTSxDQUFDUSxlQUFlQyxpQkFBaUIsR0FBR1gsK0NBQVFBLENBQVU7SUFFNUQsZ0RBQWdEO0lBQ2hEQyxnREFBU0E7cUNBQUM7WUFDUixvREFBb0Q7WUFDcEQsSUFBSSxLQUE2QixFQUFFLEVBZ0JsQztRQUNIO29DQUFHLEVBQUU7SUFFTCwyQ0FBMkM7SUFDM0NBLGdEQUFTQTtxQ0FBQztZQUNSLG1EQUFtRDtZQUNuRCxJQUFJUyxpQkFBaUIsZ0JBQWtCLGFBQWEsRUFHbkQ7UUFDSDtvQ0FBRztRQUFDRjtRQUFTRTtLQUFjO0lBRTNCLE1BQU1ELGFBQWEsQ0FBQ21CO1FBQ2xCWixnQkFBZ0IsQ0FBQ2EsT0FBVTtnQkFDekIsR0FBR0EsSUFBSTtnQkFDUCxHQUFHRCxVQUFVO1lBQ2Y7SUFDRjtJQUVBLHFCQUNFLDhEQUFDaEIsZUFBZWtCLFFBQVE7UUFDdEJDLE9BQU87WUFDTHZCO1lBQ0FDO1lBQ0FDO1lBQ0FDO1FBQ0Y7a0JBRUNJOzs7Ozs7QUFHUCxFQUFFIiwic291cmNlcyI6WyIvVXNlcnMvYWxleC9EZXZlbG9wZXIvdHJlbmRndWVzc2VyL3NyYy9jb250ZXh0cy9Db25zZW50Q29udGV4dC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29uc2VudFN0YXRlIHtcbiAgYW5hbHl0aWNzOiBib29sZWFuO1xuICBuZWNlc3Nhcnk6IGJvb2xlYW47IC8vIEFsd2F5cyB0cnVlLCByZXF1aXJlZCBmb3IgYXBwIGZ1bmN0aW9uYWxpdHlcbiAgbG9jYWxTdG9yYWdlOiBib29sZWFuO1xuICBmaXJlYmFzZTogYm9vbGVhbjtcbn1cblxuaW50ZXJmYWNlIENvbnNlbnRDb250ZXh0VHlwZSB7XG4gIGNvbnNlbnQ6IENvbnNlbnRTdGF0ZTtcbiAgc2V0Q29uc2VudDogKGNvbnNlbnQ6IFBhcnRpYWw8Q29uc2VudFN0YXRlPikgPT4gdm9pZDtcbiAgaGFzU2V0Q29uc2VudDogYm9vbGVhbjtcbiAgc2V0SGFzU2V0Q29uc2VudDogKGhhc1NldDogYm9vbGVhbikgPT4gdm9pZDtcbn1cblxuY29uc3QgZGVmYXVsdENvbnNlbnRTdGF0ZTogQ29uc2VudFN0YXRlID0ge1xuICBhbmFseXRpY3M6IGZhbHNlLFxuICBuZWNlc3Nhcnk6IHRydWUsIC8vIEFsd2F5cyB0cnVlLCByZXF1aXJlZCBmb3IgYXBwIGZ1bmN0aW9uYWxpdHlcbiAgbG9jYWxTdG9yYWdlOiB0cnVlLCAvLyBEZWZhdWx0IHRvIHRydWUgZm9yIFRyZW5kR3Vlc3NlciBhcyBpdCdzIG5lZWRlZCBmb3Igc2NvcmUgdHJhY2tpbmdcbiAgZmlyZWJhc2U6IHRydWUsIC8vIERlZmF1bHQgdG8gdHJ1ZSBmb3IgVHJlbmRHdWVzc2VyIGFzIGl0J3MgbmVlZGVkIGZvciBnYW1lIGZ1bmN0aW9uYWxpdHlcbn07XG5cbmNvbnN0IGRlZmF1bHRDb250ZXh0OiBDb25zZW50Q29udGV4dFR5cGUgPSB7XG4gIGNvbnNlbnQ6IGRlZmF1bHRDb25zZW50U3RhdGUsXG4gIHNldENvbnNlbnQ6ICgpID0+IHt9LFxuICBoYXNTZXRDb25zZW50OiBmYWxzZSxcbiAgc2V0SGFzU2V0Q29uc2VudDogKCkgPT4ge30sXG59O1xuXG5jb25zdCBDb25zZW50Q29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8Q29uc2VudENvbnRleHRUeXBlPihkZWZhdWx0Q29udGV4dCk7XG5cbmV4cG9ydCBjb25zdCB1c2VDb25zZW50ID0gKCkgPT4gdXNlQ29udGV4dChDb25zZW50Q29udGV4dCk7XG5cbmV4cG9ydCBjb25zdCBDb25zZW50UHJvdmlkZXI6IFJlYWN0LkZDPHsgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZSB9PiA9ICh7IGNoaWxkcmVuIH0pID0+IHtcbiAgY29uc3QgW2NvbnNlbnQsIHNldENvbnNlbnRTdGF0ZV0gPSB1c2VTdGF0ZTxDb25zZW50U3RhdGU+KGRlZmF1bHRDb25zZW50U3RhdGUpO1xuICBjb25zdCBbaGFzU2V0Q29uc2VudCwgc2V0SGFzU2V0Q29uc2VudF0gPSB1c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XG5cbiAgLy8gTG9hZCBjb25zZW50IHN0YXRlIGZyb20gbG9jYWxTdG9yYWdlIG9uIG1vdW50XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgLy8gT25seSBhdHRlbXB0IHRvIHJlYWQgaWYgbG9jYWxTdG9yYWdlIGlzIGF2YWlsYWJsZVxuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uc3Qgc3RvcmVkQ29uc2VudCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjb25zZW50Jyk7XG4gICAgICBjb25zdCBzdG9yZWRIYXNTZXRDb25zZW50ID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2hhc1NldENvbnNlbnQnKTtcbiAgICAgIFxuICAgICAgaWYgKHN0b3JlZENvbnNlbnQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjb25zdCBwYXJzZWRDb25zZW50ID0gSlNPTi5wYXJzZShzdG9yZWRDb25zZW50KTtcbiAgICAgICAgICBzZXRDb25zZW50U3RhdGUocGFyc2VkQ29uc2VudCk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIHBhcnNlIHN0b3JlZCBjb25zZW50JywgZXJyb3IpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBcbiAgICAgIGlmIChzdG9yZWRIYXNTZXRDb25zZW50KSB7XG4gICAgICAgIHNldEhhc1NldENvbnNlbnQoc3RvcmVkSGFzU2V0Q29uc2VudCA9PT0gJ3RydWUnKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIFtdKTtcblxuICAvLyBVcGRhdGUgbG9jYWxTdG9yYWdlIHdoZW4gY29uc2VudCBjaGFuZ2VzXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgLy8gT25seSBzYXZlIGlmIHRoZSB1c2VyIGhhcyBleHBsaWNpdGx5IHNldCBjb25zZW50XG4gICAgaWYgKGhhc1NldENvbnNlbnQgJiYgdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdjb25zZW50JywgSlNPTi5zdHJpbmdpZnkoY29uc2VudCkpO1xuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2hhc1NldENvbnNlbnQnLCBoYXNTZXRDb25zZW50LnRvU3RyaW5nKCkpO1xuICAgIH1cbiAgfSwgW2NvbnNlbnQsIGhhc1NldENvbnNlbnRdKTtcblxuICBjb25zdCBzZXRDb25zZW50ID0gKG5ld0NvbnNlbnQ6IFBhcnRpYWw8Q29uc2VudFN0YXRlPikgPT4ge1xuICAgIHNldENvbnNlbnRTdGF0ZSgocHJldikgPT4gKHtcbiAgICAgIC4uLnByZXYsXG4gICAgICAuLi5uZXdDb25zZW50LFxuICAgIH0pKTtcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxDb25zZW50Q29udGV4dC5Qcm92aWRlclxuICAgICAgdmFsdWU9e3tcbiAgICAgICAgY29uc2VudCxcbiAgICAgICAgc2V0Q29uc2VudCxcbiAgICAgICAgaGFzU2V0Q29uc2VudCxcbiAgICAgICAgc2V0SGFzU2V0Q29uc2VudCxcbiAgICAgIH19XG4gICAgPlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvQ29uc2VudENvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59O1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwiY3JlYXRlQ29udGV4dCIsInVzZUNvbnRleHQiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsImRlZmF1bHRDb25zZW50U3RhdGUiLCJhbmFseXRpY3MiLCJuZWNlc3NhcnkiLCJsb2NhbFN0b3JhZ2UiLCJmaXJlYmFzZSIsImRlZmF1bHRDb250ZXh0IiwiY29uc2VudCIsInNldENvbnNlbnQiLCJoYXNTZXRDb25zZW50Iiwic2V0SGFzU2V0Q29uc2VudCIsIkNvbnNlbnRDb250ZXh0IiwidXNlQ29uc2VudCIsIkNvbnNlbnRQcm92aWRlciIsImNoaWxkcmVuIiwic2V0Q29uc2VudFN0YXRlIiwic3RvcmVkQ29uc2VudCIsImdldEl0ZW0iLCJzdG9yZWRIYXNTZXRDb25zZW50IiwicGFyc2VkQ29uc2VudCIsIkpTT04iLCJwYXJzZSIsImVycm9yIiwiY29uc29sZSIsInNldEl0ZW0iLCJzdHJpbmdpZnkiLCJ0b1N0cmluZyIsIm5ld0NvbnNlbnQiLCJwcmV2IiwiUHJvdmlkZXIiLCJ2YWx1ZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-node)/./src/contexts/ConsentContext.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./src/contexts/GameContext.tsx":
/*!**************************************!*\
  !*** ./src/contexts/GameContext.tsx ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GameProvider: () => (/* binding */ GameProvider),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   useGame: () => (/* binding */ useGame)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"(pages-dir-node)/./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/firestore */ \"firebase/firestore\");\n/* harmony import */ var _lib_firebase_firebase__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/firebase/firebase */ \"(pages-dir-node)/./src/lib/firebase/firebase.ts\");\n/* harmony import */ var _AuthContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./AuthContext */ \"(pages-dir-node)/./src/contexts/AuthContext.tsx\");\n/* harmony import */ var _lib_firebase_trendGuesserService__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/lib/firebase/trendGuesserService */ \"(pages-dir-node)/./src/lib/firebase/trendGuesserService.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([firebase_firestore__WEBPACK_IMPORTED_MODULE_3__, _lib_firebase_firebase__WEBPACK_IMPORTED_MODULE_4__, _AuthContext__WEBPACK_IMPORTED_MODULE_5__, _lib_firebase_trendGuesserService__WEBPACK_IMPORTED_MODULE_6__]);\n([firebase_firestore__WEBPACK_IMPORTED_MODULE_3__, _lib_firebase_firebase__WEBPACK_IMPORTED_MODULE_4__, _AuthContext__WEBPACK_IMPORTED_MODULE_5__, _lib_firebase_trendGuesserService__WEBPACK_IMPORTED_MODULE_6__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\nconst GameContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst GameProvider = ({ children })=>{\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const { userUid } = (0,_AuthContext__WEBPACK_IMPORTED_MODULE_5__.useAuth)();\n    // Use localStorage to persist gameId across page refreshes in development\n    const getInitialGameId = ()=>{\n        if (false) {}\n        return null;\n    };\n    const [gameId, _setGameId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(getInitialGameId());\n    const [gameData, setGameData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [gameState, setGameState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [currentPlayer, setCurrentPlayer] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Custom setter for gameId that also updates sessionStorage\n    const setGameId = (id)=>{\n        console.log(\"Setting game ID to:\", id);\n        _setGameId(id);\n        // Also update sessionStorage\n        if (false) {}\n    };\n    // Check for a stored game ID on initial load (for mock mode)\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"GameProvider.useEffect\": ()=>{\n            if ( true && !gameId) {\n                if (false) {}\n            }\n        }\n    }[\"GameProvider.useEffect\"], []);\n    // Watch for changes to the game data\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"GameProvider.useEffect\": ()=>{\n            if (!userUid) {\n                setLoading(false);\n                return;\n            }\n            // If game ID is not set, but we're in mock mode, try to get it from session storage\n            if (!gameId && \"true\" === \"true\") {\n                if (false) {}\n                setLoading(false);\n                return;\n            }\n            if (!gameId) {\n                setLoading(false);\n                return;\n            }\n            setLoading(true);\n            setError(null);\n            console.log(`Setting up game data watcher for game ID: ${gameId}, user: ${userUid}`);\n            // Check if using mock data\n            if (true) {\n                console.log(\"Using mock data in GameContext for game:\", gameId);\n                // Create function to check for game data in sessionStorage\n                const checkMockGameData = {\n                    \"GameProvider.useEffect.checkMockGameData\": ()=>{\n                        if (false) {}\n                    }\n                }[\"GameProvider.useEffect.checkMockGameData\"];\n                // Check immediately\n                checkMockGameData();\n                // Set up interval to check for changes (simulating Firestore's onSnapshot)\n                const intervalId = setInterval(checkMockGameData, 500);\n                return ({\n                    \"GameProvider.useEffect\": ()=>{\n                        console.log(`Cleaning up game data watcher for game ID: ${gameId}`);\n                        clearInterval(intervalId);\n                    }\n                })[\"GameProvider.useEffect\"];\n            } else {}\n        }\n    }[\"GameProvider.useEffect\"], [\n        gameId,\n        userUid\n    ]);\n    // Start a new game\n    const startGame = async (category, customTerm)=>{\n        if (!gameId || !userUid) {\n            setError(\"No game ID or user ID\");\n            return;\n        }\n        try {\n            setLoading(true);\n            console.log(`Starting game with ID: ${gameId}, category: ${category}, customTerm: ${customTerm || \"none\"}`);\n            // When using mock data, make sure the current_game_id is set correctly before starting the game\n            if (false) {}\n            // Start the game - this should return the initial game state\n            const initialGameState = await _lib_firebase_trendGuesserService__WEBPACK_IMPORTED_MODULE_6__.TrendGuesserService.startGame(gameId, category, customTerm);\n            if (initialGameState) {\n                // Set the game state directly from the return value for immediate use\n                setGameState(initialGameState);\n                // Update player data if needed\n                if (false) {}\n            } else {\n                console.error(\"No game state returned from TrendGuesserService.startGame\");\n                setError(\"Failed to initialize game state\");\n            }\n            setLoading(false);\n        } catch (error) {\n            console.error(\"Error starting game:\", error);\n            setError(\"Failed to start game: \" + (error instanceof Error ? error.message : \"Unknown error\"));\n            setLoading(false);\n        }\n    };\n    // Make a guess (higher or lower)\n    const makeGuess = async (isHigher)=>{\n        if (!userUid) {\n            setError(\"No user ID\");\n            return false;\n        }\n        // Get the current game ID from state or session storage\n        let currentGameId = gameId;\n        if (!currentGameId && \"true\" === \"true\" && \"undefined\" !== \"undefined\") {}\n        if (!currentGameId) {\n            setError(\"No game ID available\");\n            return false;\n        }\n        try {\n            // In mock mode, ensure the current game state is loaded properly\n            if (false) {}\n            console.log(`Making guess (${isHigher ? \"HIGHER\" : \"LOWER\"}) for game:`, currentGameId);\n            const result = await _lib_firebase_trendGuesserService__WEBPACK_IMPORTED_MODULE_6__.TrendGuesserService.makeGuess(currentGameId, userUid, isHigher);\n            // If in mock mode, immediately update the game state to reflect the guess result\n            if (false) {}\n            return result;\n        } catch (error) {\n            console.error(\"Error making guess:\", error);\n            setError(\"Failed to process guess: \" + (error instanceof Error ? error.message : \"Unknown error\"));\n            return false;\n        }\n    };\n    // End the game\n    const endGame = async ()=>{\n        if (!userUid || !currentPlayer) {\n            setError(\"No user ID or player data\");\n            return;\n        }\n        // Get the current game ID from state or session storage\n        let currentGameId = gameId;\n        if (!currentGameId && \"true\" === \"true\" && \"undefined\" !== \"undefined\") {}\n        if (!currentGameId) {\n            console.warn(\"No game ID available for ending game, will still proceed with reset\");\n            return;\n        }\n        try {\n            console.log(\"Ending game:\", currentGameId, \"with score:\", currentPlayer.score || 0);\n            await _lib_firebase_trendGuesserService__WEBPACK_IMPORTED_MODULE_6__.TrendGuesserService.endGame(currentGameId, userUid, currentPlayer.score || 0);\n            // In mock mode, update the game state to reflect the game ending\n            if (false) {}\n        } catch (error) {\n            console.error(\"Error ending game:\", error);\n            setError(\"Failed to end game\");\n        // Still proceed with resetting local state even if there was an error\n        }\n    };\n    // Reset game state for a new game\n    const resetGame = ()=>{\n        console.log(\"Resetting game state\");\n        // Store game ID before clearing it\n        const currentGameId = gameId;\n        // Clear state\n        setGameId(null);\n        setGameData(null);\n        setGameState(null);\n        setCurrentPlayer(null);\n        setError(null);\n        // Clear any stored game data for this game if in mock mode\n        if (false) {}\n    };\n    const value = {\n        gameId,\n        gameData,\n        loading,\n        error,\n        currentPlayer,\n        gameState,\n        setGameId,\n        startGame,\n        makeGuess,\n        endGame,\n        resetGame\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(GameContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/alex/Developer/trendguesser/src/contexts/GameContext.tsx\",\n        lineNumber: 553,\n        columnNumber: 10\n    }, undefined);\n};\nconst useGame = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(GameContext);\n    if (!context) {\n        throw new Error(\"useGame must be used within a GameProvider\");\n    }\n    return context;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GameContext);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./src/contexts/GameContext.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./src/lib/firebase/firebase.ts":
/*!**************************************!*\
  !*** ./src/lib/firebase/firebase.ts ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analytics: () => (/* binding */ analytics),\n/* harmony export */   app: () => (/* binding */ app),\n/* harmony export */   auth: () => (/* binding */ auth),\n/* harmony export */   db: () => (/* binding */ db),\n/* harmony export */   initializeFirebase: () => (/* binding */ initializeFirebase),\n/* harmony export */   performance: () => (/* binding */ performance)\n/* harmony export */ });\n/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/app */ \"firebase/app\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/auth */ \"firebase/auth\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/firestore */ \"firebase/firestore\");\n/* harmony import */ var firebase_analytics__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/analytics */ \"firebase/analytics\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([firebase_app__WEBPACK_IMPORTED_MODULE_0__, firebase_auth__WEBPACK_IMPORTED_MODULE_1__, firebase_firestore__WEBPACK_IMPORTED_MODULE_2__, firebase_analytics__WEBPACK_IMPORTED_MODULE_3__]);\n([firebase_app__WEBPACK_IMPORTED_MODULE_0__, firebase_auth__WEBPACK_IMPORTED_MODULE_1__, firebase_firestore__WEBPACK_IMPORTED_MODULE_2__, firebase_analytics__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n// src/lib/firebase.ts\n\n\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAbIQ8B30KkE3CiVZ-6nNGAwiAz2Q5url8\",\n    authDomain: \"trendguesser-332d4.firebaseapp.com\",\n    projectId: \"trendguesser-332d4\",\n    storageBucket: \"trendguesser-332d4.firebasestorage.app\",\n    messagingSenderId: \"748886157474\",\n    appId: \"1:748886157474:web:08ba697d25f6ec0b228ffb\",\n    measurementId: \"G-BEQ3HXTMS3\"\n};\n// Initialize Firebase based on consent\nlet app = null;\nlet auth = null;\nlet db = null;\nlet analytics = null;\nlet performance = null;\nlet isInitialized = false;\n// Lazy initialization function to be called after consent is given\nconst initializeFirebase = (firebaseConsent = false, analyticsConsent = false)=>{\n    // Return existing Firebase instance if already initialized\n    if (isInitialized && app) {\n        return {\n            app,\n            auth,\n            db,\n            analytics,\n            performance\n        };\n    }\n    // Initialize core Firebase\n    try {\n        if (!(0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApps)().length) {\n            app = (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.initializeApp)(firebaseConfig);\n        } else {\n            app = (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApps)()[0];\n        }\n        // Get Auth and Firestore instances\n        if (app) {\n            auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.getAuth)(app);\n            db = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getFirestore)(app);\n            // Connect to emulators if in development mode\n            if (false) {} else if (true) {\n                console.log(\"Using mock data mode (Firebase emulators not enabled)\");\n            }\n        }\n        isInitialized = true;\n    } catch (error) {\n        console.error(\"Failed to initialize Firebase:\", error);\n    }\n    // Only initialize analytics if consent is given and we're in browser\n    if (analyticsConsent && \"undefined\" !== 'undefined' && 0) {}\n    return {\n        app,\n        auth,\n        db,\n        analytics,\n        performance\n    };\n};\n// Default export for backward compatibility\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL3NyYy9saWIvZmlyZWJhc2UvZmlyZWJhc2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLHNCQUFzQjtBQUM2QztBQUNBO0FBQ29CO0FBQ2I7QUFHMUUsTUFBTVEsaUJBQWlCO0lBQ3JCQyxRQUFRO0lBQ1JDLFlBQVk7SUFDWkMsV0FBVztJQUNYQyxlQUFlO0lBQ2ZDLG1CQUFtQjtJQUNuQkMsT0FBTztJQUNQQyxlQUFlO0FBQ2pCO0FBRUEsdUNBQXVDO0FBQ3ZDLElBQUlDLE1BQTBCO0FBQzlCLElBQUlDLE9BQW9CO0FBQ3hCLElBQUlDLEtBQXVCO0FBQzNCLElBQUlDLFlBQThCO0FBQ2xDLElBQUlDLGNBQTBDO0FBQzlDLElBQUlDLGdCQUFnQjtBQUVwQixtRUFBbUU7QUFDNUQsTUFBTUMscUJBQXFCLENBQUNDLGtCQUFrQixLQUFLLEVBQUVDLG1CQUFtQixLQUFLO0lBQ2xGLDJEQUEyRDtJQUMzRCxJQUFJSCxpQkFBaUJMLEtBQUs7UUFDeEIsT0FBTztZQUNMQTtZQUNBQztZQUNBQztZQUNBQztZQUNBQztRQUNGO0lBQ0Y7SUFFQSwyQkFBMkI7SUFDM0IsSUFBSTtRQUNGLElBQUksQ0FBQ25CLHFEQUFPQSxHQUFHd0IsTUFBTSxFQUFFO1lBQ3JCVCxNQUFNaEIsMkRBQWFBLENBQUNRO1FBQ3RCLE9BQU87WUFDTFEsTUFBTWYscURBQU9BLEVBQUUsQ0FBQyxFQUFFO1FBQ3BCO1FBRUEsbUNBQW1DO1FBQ25DLElBQUllLEtBQUs7WUFDUEMsT0FBT2Ysc0RBQU9BLENBQUNjO1lBQ2ZFLEtBQUtkLGdFQUFZQSxDQUFDWTtZQUVsQiw4Q0FBOEM7WUFDOUMsSUFBSSxLQUV3RCxFQUFFLEVBdUI3RCxNQUFNLElBQUlhLElBQWdELEVBQUU7Z0JBQzNESSxRQUFRQyxHQUFHLENBQUM7WUFDZDtRQUNGO1FBRUFiLGdCQUFnQjtJQUNsQixFQUFFLE9BQU9nQixPQUFPO1FBQ2RKLFFBQVFJLEtBQUssQ0FBQyxrQ0FBa0NBO0lBQ2xEO0lBRUEscUVBQXFFO0lBQ3JFLElBQUliLG9CQUFvQixnQkFBa0IsZUFBZVIsQ0FBR0EsRUFBRSxFQU03RDtJQUVELE9BQU87UUFDTEE7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7SUFDRjtBQUNGLEVBQUU7QUFFRiw0Q0FBNEM7QUFDSyIsInNvdXJjZXMiOlsiL1VzZXJzL2FsZXgvRGV2ZWxvcGVyL3RyZW5kZ3Vlc3Nlci9zcmMvbGliL2ZpcmViYXNlL2ZpcmViYXNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9saWIvZmlyZWJhc2UudHNcbmltcG9ydCB7IGluaXRpYWxpemVBcHAsIGdldEFwcHMsIEZpcmViYXNlQXBwIH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7IGdldEF1dGgsIEF1dGgsIGNvbm5lY3RBdXRoRW11bGF0b3IgfSBmcm9tICdmaXJlYmFzZS9hdXRoJztcbmltcG9ydCB7IGdldEZpcmVzdG9yZSwgRmlyZXN0b3JlLCBjb25uZWN0RmlyZXN0b3JlRW11bGF0b3IgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xuaW1wb3J0IHsgZ2V0QW5hbHl0aWNzLCBpc1N1cHBvcnRlZCwgQW5hbHl0aWNzIH0gZnJvbSAnZmlyZWJhc2UvYW5hbHl0aWNzJztcbmltcG9ydCB7IGdldFBlcmZvcm1hbmNlLCBGaXJlYmFzZVBlcmZvcm1hbmNlIH0gZnJvbSAnZmlyZWJhc2UvcGVyZm9ybWFuY2UnO1xuXG5jb25zdCBmaXJlYmFzZUNvbmZpZyA9IHtcbiAgYXBpS2V5OiBcIkFJemFTeUFiSVE4QjMwS2tFM0NpVlotNm5OR0F3aUF6MlE1dXJsOFwiLFxuICBhdXRoRG9tYWluOiBcInRyZW5kZ3Vlc3Nlci0zMzJkNC5maXJlYmFzZWFwcC5jb21cIixcbiAgcHJvamVjdElkOiBcInRyZW5kZ3Vlc3Nlci0zMzJkNFwiLFxuICBzdG9yYWdlQnVja2V0OiBcInRyZW5kZ3Vlc3Nlci0zMzJkNC5maXJlYmFzZXN0b3JhZ2UuYXBwXCIsXG4gIG1lc3NhZ2luZ1NlbmRlcklkOiBcIjc0ODg4NjE1NzQ3NFwiLFxuICBhcHBJZDogXCIxOjc0ODg4NjE1NzQ3NDp3ZWI6MDhiYTY5N2QyNWY2ZWMwYjIyOGZmYlwiLFxuICBtZWFzdXJlbWVudElkOiBcIkctQkVRM0hYVE1TM1wiXG59O1xuXG4vLyBJbml0aWFsaXplIEZpcmViYXNlIGJhc2VkIG9uIGNvbnNlbnRcbmxldCBhcHA6IEZpcmViYXNlQXBwIHwgbnVsbCA9IG51bGw7XG5sZXQgYXV0aDogQXV0aCB8IG51bGwgPSBudWxsO1xubGV0IGRiOiBGaXJlc3RvcmUgfCBudWxsID0gbnVsbDtcbmxldCBhbmFseXRpY3M6IEFuYWx5dGljcyB8IG51bGwgPSBudWxsO1xubGV0IHBlcmZvcm1hbmNlOiBGaXJlYmFzZVBlcmZvcm1hbmNlIHwgbnVsbCA9IG51bGw7XG5sZXQgaXNJbml0aWFsaXplZCA9IGZhbHNlO1xuXG4vLyBMYXp5IGluaXRpYWxpemF0aW9uIGZ1bmN0aW9uIHRvIGJlIGNhbGxlZCBhZnRlciBjb25zZW50IGlzIGdpdmVuXG5leHBvcnQgY29uc3QgaW5pdGlhbGl6ZUZpcmViYXNlID0gKGZpcmViYXNlQ29uc2VudCA9IGZhbHNlLCBhbmFseXRpY3NDb25zZW50ID0gZmFsc2UpID0+IHtcbiAgLy8gUmV0dXJuIGV4aXN0aW5nIEZpcmViYXNlIGluc3RhbmNlIGlmIGFscmVhZHkgaW5pdGlhbGl6ZWRcbiAgaWYgKGlzSW5pdGlhbGl6ZWQgJiYgYXBwKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFwcCxcbiAgICAgIGF1dGgsXG4gICAgICBkYixcbiAgICAgIGFuYWx5dGljcyxcbiAgICAgIHBlcmZvcm1hbmNlXG4gICAgfTtcbiAgfVxuICBcbiAgLy8gSW5pdGlhbGl6ZSBjb3JlIEZpcmViYXNlXG4gIHRyeSB7XG4gICAgaWYgKCFnZXRBcHBzKCkubGVuZ3RoKSB7XG4gICAgICBhcHAgPSBpbml0aWFsaXplQXBwKGZpcmViYXNlQ29uZmlnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBwID0gZ2V0QXBwcygpWzBdO1xuICAgIH1cbiAgICBcbiAgICAvLyBHZXQgQXV0aCBhbmQgRmlyZXN0b3JlIGluc3RhbmNlc1xuICAgIGlmIChhcHApIHtcbiAgICAgIGF1dGggPSBnZXRBdXRoKGFwcCk7XG4gICAgICBkYiA9IGdldEZpcmVzdG9yZShhcHApO1xuICAgICAgXG4gICAgICAvLyBDb25uZWN0IHRvIGVtdWxhdG9ycyBpZiBpbiBkZXZlbG9wbWVudCBtb2RlXG4gICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgXG4gICAgICAgICAgKHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZSA9PT0gJ2xvY2FsaG9zdCcgfHwgd2luZG93LmxvY2F0aW9uLmhvc3RuYW1lID09PSAnMTI3LjAuMC4xJykgJiYgXG4gICAgICAgICAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfVVNFX0ZJUkVCQVNFX0VNVUxBVE9SID09PSAndHJ1ZScpIHtcbiAgICAgICAgXG4gICAgICAgIC8vIEFkZCBhIGdsb2JhbCBmbGFnIHRvIGluZGljYXRlIHdlJ3JlIHVzaW5nIGVtdWxhdG9yc1xuICAgICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICB3aW5kb3cuX19VU0lOR19GSVJFQkFTRV9FTVVMQVRPUiA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgaWYgKGF1dGgpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQ29ubmVjdGluZyB0byBGaXJlYmFzZSBBdXRoIGVtdWxhdG9yXCIpO1xuICAgICAgICAgICAgY29ubmVjdEF1dGhFbXVsYXRvcihhdXRoLCAnaHR0cDovL2xvY2FsaG9zdDo5MDk5JywgeyBkaXNhYmxlV2FybmluZ3M6IHRydWUgfSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIFxuICAgICAgICAgIGlmIChkYikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJDb25uZWN0aW5nIHRvIEZpcmVzdG9yZSBlbXVsYXRvclwiKTtcbiAgICAgICAgICAgIGNvbm5lY3RGaXJlc3RvcmVFbXVsYXRvcihkYiwgJ2xvY2FsaG9zdCcsIDgwODApO1xuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIuKckyBTdWNjZXNzZnVsbHkgY29ubmVjdGVkIHRvIEZpcmViYXNlIGVtdWxhdG9yc1wiKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBjb25uZWN0IHRvIEZpcmViYXNlIGVtdWxhdG9yczpcIiwgZXJyKTtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIuKaoO+4jyBGYWxsYmFjayB0byBtb2NrIGRhdGEgbW9kZVwiKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19VU0VfTU9DS19EQVRBID09PSAndHJ1ZScpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJVc2luZyBtb2NrIGRhdGEgbW9kZSAoRmlyZWJhc2UgZW11bGF0b3JzIG5vdCBlbmFibGVkKVwiKTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgaXNJbml0aWFsaXplZCA9IHRydWU7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBpbml0aWFsaXplIEZpcmViYXNlOlwiLCBlcnJvcik7XG4gIH1cblxuICAvLyBPbmx5IGluaXRpYWxpemUgYW5hbHl0aWNzIGlmIGNvbnNlbnQgaXMgZ2l2ZW4gYW5kIHdlJ3JlIGluIGJyb3dzZXJcbiAgaWYgKGFuYWx5dGljc0NvbnNlbnQgJiYgdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgYXBwKSB7XG4gICAgaXNTdXBwb3J0ZWQoKS50aGVuKHllcyA9PiB7XG4gICAgICBpZiAoeWVzKSB7XG4gICAgICAgIGFuYWx5dGljcyA9IGdldEFuYWx5dGljcyhhcHApO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBhcHAsXG4gICAgYXV0aCxcbiAgICBkYixcbiAgICBhbmFseXRpY3MsXG4gICAgcGVyZm9ybWFuY2VcbiAgfTtcbn07XG5cbi8vIERlZmF1bHQgZXhwb3J0IGZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5XG5leHBvcnQgeyBhcHAsIGF1dGgsIGRiLCBhbmFseXRpY3MsIHBlcmZvcm1hbmNlIH07Il0sIm5hbWVzIjpbImluaXRpYWxpemVBcHAiLCJnZXRBcHBzIiwiZ2V0QXV0aCIsImNvbm5lY3RBdXRoRW11bGF0b3IiLCJnZXRGaXJlc3RvcmUiLCJjb25uZWN0RmlyZXN0b3JlRW11bGF0b3IiLCJnZXRBbmFseXRpY3MiLCJpc1N1cHBvcnRlZCIsImZpcmViYXNlQ29uZmlnIiwiYXBpS2V5IiwiYXV0aERvbWFpbiIsInByb2plY3RJZCIsInN0b3JhZ2VCdWNrZXQiLCJtZXNzYWdpbmdTZW5kZXJJZCIsImFwcElkIiwibWVhc3VyZW1lbnRJZCIsImFwcCIsImF1dGgiLCJkYiIsImFuYWx5dGljcyIsInBlcmZvcm1hbmNlIiwiaXNJbml0aWFsaXplZCIsImluaXRpYWxpemVGaXJlYmFzZSIsImZpcmViYXNlQ29uc2VudCIsImFuYWx5dGljc0NvbnNlbnQiLCJsZW5ndGgiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsImhvc3RuYW1lIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1VTRV9GSVJFQkFTRV9FTVVMQVRPUiIsIl9fVVNJTkdfRklSRUJBU0VfRU1VTEFUT1IiLCJjb25zb2xlIiwibG9nIiwiZGlzYWJsZVdhcm5pbmdzIiwiZXJyIiwiZXJyb3IiLCJORVhUX1BVQkxJQ19VU0VfTU9DS19EQVRBIiwidGhlbiIsInllcyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-node)/./src/lib/firebase/firebase.ts\n");

/***/ }),

/***/ "(pages-dir-node)/./src/lib/firebase/mockData.ts":
/*!**************************************!*\
  !*** ./src/lib/firebase/mockData.ts ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sampleLeaderboard: () => (/* binding */ sampleLeaderboard),\n/* harmony export */   sampleSearchTerms: () => (/* binding */ sampleSearchTerms)\n/* harmony export */ });\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/firestore */ \"firebase/firestore\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([firebase_firestore__WEBPACK_IMPORTED_MODULE_0__]);\nfirebase_firestore__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n// Function to generate a consistent image URL for a term\nconst getImageUrl = (term)=>{\n    return `https://source.unsplash.com/800x600/?${encodeURIComponent(term)}`;\n};\n// Sample search terms for development\nconst sampleSearchTerms = [\n    {\n        id: 'term1',\n        term: 'Artificial Intelligence',\n        volume: 850000,\n        category: 'technology',\n        imageUrl: getImageUrl('artificial intelligence technology'),\n        timestamp: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n    },\n    {\n        id: 'term2',\n        term: 'Machine Learning',\n        volume: 650000,\n        category: 'technology',\n        imageUrl: getImageUrl('machine learning code'),\n        timestamp: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n    },\n    {\n        id: 'term3',\n        term: 'Blockchain',\n        volume: 450000,\n        category: 'technology',\n        imageUrl: getImageUrl('blockchain digital'),\n        timestamp: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n    },\n    {\n        id: 'term4',\n        term: 'PlayStation 5',\n        volume: 950000,\n        category: 'gaming',\n        imageUrl: getImageUrl('playstation 5 console'),\n        timestamp: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n    },\n    {\n        id: 'term5',\n        term: 'Xbox Series X',\n        volume: 750000,\n        category: 'gaming',\n        imageUrl: getImageUrl('xbox series x console'),\n        timestamp: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n    },\n    {\n        id: 'term6',\n        term: 'Elden Ring',\n        volume: 550000,\n        category: 'gaming',\n        imageUrl: getImageUrl('elden ring game'),\n        timestamp: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n    },\n    {\n        id: 'term7',\n        term: 'Taylor Swift',\n        volume: 1000000,\n        category: 'entertainment',\n        imageUrl: getImageUrl('taylor swift concert'),\n        timestamp: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n    },\n    {\n        id: 'term8',\n        term: 'Dune Part 2',\n        volume: 700000,\n        category: 'entertainment',\n        imageUrl: getImageUrl('dune movie desert'),\n        timestamp: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n    },\n    {\n        id: 'term9',\n        term: 'Stranger Things',\n        volume: 500000,\n        category: 'entertainment',\n        imageUrl: getImageUrl('stranger things tv show'),\n        timestamp: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n    },\n    {\n        id: 'term10',\n        term: 'Climate Change',\n        volume: 900000,\n        category: 'news',\n        imageUrl: getImageUrl('climate change earth'),\n        timestamp: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n    },\n    {\n        id: 'term11',\n        term: 'COVID-19',\n        volume: 600000,\n        category: 'news',\n        imageUrl: getImageUrl('covid healthcare mask'),\n        timestamp: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n    },\n    {\n        id: 'term12',\n        term: 'US Elections',\n        volume: 800000,\n        category: 'news',\n        imageUrl: getImageUrl('us election voting'),\n        timestamp: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n    },\n    {\n        id: 'term13',\n        term: 'NBA Playoffs',\n        volume: 850000,\n        category: 'sports',\n        imageUrl: getImageUrl('nba basketball game'),\n        timestamp: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n    },\n    {\n        id: 'term14',\n        term: 'World Cup',\n        volume: 950000,\n        category: 'sports',\n        imageUrl: getImageUrl('soccer world cup'),\n        timestamp: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n    },\n    {\n        id: 'term15',\n        term: 'Formula 1',\n        volume: 750000,\n        category: 'sports',\n        imageUrl: getImageUrl('formula 1 racing'),\n        timestamp: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n    },\n    // Additional terms for better diversity in categories\n    {\n        id: 'term16',\n        term: 'Giraffes',\n        volume: 250000,\n        category: 'animals',\n        imageUrl: getImageUrl('giraffe wildlife'),\n        timestamp: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n    },\n    {\n        id: 'term17',\n        term: 'Pandas',\n        volume: 420000,\n        category: 'animals',\n        imageUrl: getImageUrl('panda bear'),\n        timestamp: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n    },\n    {\n        id: 'term18',\n        term: 'Dolphins',\n        volume: 380000,\n        category: 'animals',\n        imageUrl: getImageUrl('dolphin ocean'),\n        timestamp: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n    },\n    {\n        id: 'term19',\n        term: 'Dogs',\n        volume: 890000,\n        category: 'animals',\n        imageUrl: getImageUrl('dog puppy cute'),\n        timestamp: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n    },\n    {\n        id: 'term20',\n        term: 'Cats',\n        volume: 920000,\n        category: 'animals',\n        imageUrl: getImageUrl('cat kitten'),\n        timestamp: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n    }\n];\n// Sample leaderboard data\nconst sampleLeaderboard = [\n    {\n        uid: 'player1',\n        name: 'ChampionGamer',\n        score: 24,\n        highScores: {\n            technology: 12,\n            gaming: 24,\n            sports: 8,\n            animals: 15,\n            everything: 18,\n            entertainment: 10\n        }\n    },\n    {\n        uid: 'player2',\n        name: 'TrendMaster',\n        score: 20,\n        highScores: {\n            entertainment: 20,\n            news: 15,\n            sports: 18,\n            technology: 14,\n            everything: 16,\n            animals: 12\n        }\n    },\n    {\n        uid: 'player3',\n        name: 'SearchWizard',\n        score: 18,\n        highScores: {\n            technology: 18,\n            gaming: 10,\n            entertainment: 12,\n            sports: 16,\n            everything: 14,\n            animals: 8\n        }\n    },\n    {\n        uid: 'player4',\n        name: 'DataNerd',\n        score: 16,\n        highScores: {\n            technology: 16,\n            news: 14,\n            sports: 8,\n            gaming: 12,\n            everything: 15,\n            questions: 18\n        }\n    },\n    {\n        uid: 'player5',\n        name: 'GuessingGuru',\n        score: 15,\n        highScores: {\n            gaming: 15,\n            entertainment: 9,\n            sports: 12,\n            animals: 18,\n            everything: 13,\n            technology: 10\n        }\n    }\n];\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./src/lib/firebase/mockData.ts\n");

/***/ }),

/***/ "(pages-dir-node)/./src/lib/firebase/trendGuesserService.ts":
/*!*************************************************!*\
  !*** ./src/lib/firebase/trendGuesserService.ts ***!
  \*************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TrendGuesserService: () => (/* binding */ TrendGuesserService)\n/* harmony export */ });\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/firestore */ \"firebase/firestore\");\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./firebase */ \"(pages-dir-node)/./src/lib/firebase/firebase.ts\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uuid */ \"uuid\");\n/* harmony import */ var _mockData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mockData */ \"(pages-dir-node)/./src/lib/firebase/mockData.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([firebase_firestore__WEBPACK_IMPORTED_MODULE_0__, _firebase__WEBPACK_IMPORTED_MODULE_1__, uuid__WEBPACK_IMPORTED_MODULE_2__, _mockData__WEBPACK_IMPORTED_MODULE_3__]);\n([firebase_firestore__WEBPACK_IMPORTED_MODULE_0__, _firebase__WEBPACK_IMPORTED_MODULE_1__, uuid__WEBPACK_IMPORTED_MODULE_2__, _mockData__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n// src/lib/firebase/trendGuesserService.ts\n\n\n\n\n// Development mode flag\nconst USE_MOCK_DATA =  true || 0;\nclass TrendGuesserService {\n    // Start a new game with selected category\n    static async startGame(gameId, category, customTerm) {\n        try {\n            console.log(`TrendGuesserService.startGame: Starting game ${gameId} with category ${category}`);\n            // In mock mode, we don't need to check if the game exists\n            if (!USE_MOCK_DATA) {\n                const gameRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'games', gameId.toUpperCase());\n                const gameDoc = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDoc)(gameRef);\n                if (!gameDoc.exists()) {\n                    throw new Error('Game does not exist');\n                }\n            } else {\n                console.log('Using mock data for game start');\n            }\n            // Get terms for the selected category\n            let terms = [];\n            if (category === 'custom' && customTerm) {\n                // For custom games, fetch the custom term and related terms\n                terms = await this.fetchCustomTermWithRelated(customTerm);\n            } else {\n                // For predefined categories, fetch terms from the database\n                terms = await this.fetchTermsByCategory(category);\n            }\n            if (terms.length < 2) {\n                console.error('Not enough terms available for category:', category);\n                throw new Error('Not enough terms available');\n            }\n            // Shuffle the terms\n            const shuffledTerms = this.shuffleTerms(terms);\n            // Initialize game state with first two terms\n            const gameState = {\n                currentRound: 1,\n                knownTerm: shuffledTerms[0],\n                hiddenTerm: shuffledTerms[1],\n                category,\n                started: true,\n                finished: false,\n                usedTerms: [\n                    shuffledTerms[0].id,\n                    shuffledTerms[1].id\n                ],\n                terms: shuffledTerms.slice(2),\n                customTerm: category === 'custom' ? customTerm : undefined\n            };\n            if (!USE_MOCK_DATA) {\n                // Update the game document with new game state\n                const gameRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'games', gameId.toUpperCase());\n                await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(gameRef, {\n                    status: 'active',\n                    '__trendguesser.state': gameState\n                });\n                console.log(`Updated Firestore with game state for game ${gameId}`);\n            } else {\n                // In mock mode, we just log what would have happened\n                console.log('Mock: Game started with category:', category);\n                // Store the game state in sessionStorage for mock mode\n                if (false) {}\n            }\n            // Return the created game state for immediate use\n            return gameState;\n        } catch (error) {\n            console.error('Error starting game:', error);\n            if (USE_MOCK_DATA) {\n                console.log('Falling back to basic mock game state due to error');\n                // Create and return a basic mock game state\n                const fallbackState = {\n                    currentRound: 1,\n                    knownTerm: _mockData__WEBPACK_IMPORTED_MODULE_3__.sampleSearchTerms[0],\n                    hiddenTerm: _mockData__WEBPACK_IMPORTED_MODULE_3__.sampleSearchTerms[1],\n                    category: category || 'everything',\n                    started: true,\n                    finished: false,\n                    usedTerms: [\n                        _mockData__WEBPACK_IMPORTED_MODULE_3__.sampleSearchTerms[0].id,\n                        _mockData__WEBPACK_IMPORTED_MODULE_3__.sampleSearchTerms[1].id\n                    ],\n                    terms: _mockData__WEBPACK_IMPORTED_MODULE_3__.sampleSearchTerms.slice(2),\n                    customTerm: category === 'custom' ? customTerm : undefined\n                };\n                // Store the fallback state in session storage\n                if (false) {}\n                return fallbackState;\n            }\n            throw error;\n        }\n    }\n    // Make a guess (higher or lower)\n    static async makeGuess(gameId, playerUid, isHigher) {\n        try {\n            // Handle mock mode\n            if (USE_MOCK_DATA) {\n                console.log('Using mock data for guess:', {\n                    gameId,\n                    playerUid,\n                    isHigher\n                });\n                // Get game data from session storage\n                if (false) {}\n                return Math.random() > 0.5; // Fallback if no session storage\n            }\n            // Regular Firestore implementation\n            const gameRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'games', gameId.toUpperCase());\n            const gameDoc = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDoc)(gameRef);\n            if (!gameDoc.exists()) {\n                throw new Error('Game does not exist');\n            }\n            const gameData = gameDoc.data();\n            const gameState = gameData['__trendguesser.state'];\n            const player = gameData[playerUid];\n            if (!gameState || !gameState.started || gameState.finished) {\n                throw new Error('Game is not active');\n            }\n            // Check if the guess is correct\n            const isCorrect = isHigher ? gameState.hiddenTerm.volume > gameState.knownTerm.volume : gameState.hiddenTerm.volume < gameState.knownTerm.volume;\n            if (isCorrect) {\n                // Correct guess - prepare next round\n                const nextRound = gameState.currentRound + 1;\n                const newPlayerScore = (player.score || 0) + 1;\n                // Update player score\n                await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(gameRef, {\n                    [`${playerUid}.score`]: newPlayerScore\n                });\n                // If we have more terms, set up next round\n                if (gameState.terms.length > 0) {\n                    const nextTerm = gameState.terms[0];\n                    const remainingTerms = gameState.terms.slice(1);\n                    const updatedState = {\n                        ...gameState,\n                        currentRound: nextRound,\n                        knownTerm: gameState.hiddenTerm,\n                        hiddenTerm: nextTerm,\n                        usedTerms: [\n                            ...gameState.usedTerms,\n                            nextTerm.id\n                        ],\n                        terms: remainingTerms\n                    };\n                    await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(gameRef, {\n                        '__trendguesser.state': updatedState\n                    });\n                } else {\n                    // No more terms - player wins by completing all terms\n                    const updatedState = {\n                        ...gameState,\n                        finished: true,\n                        winner: playerUid\n                    };\n                    await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(gameRef, {\n                        '__trendguesser.state': updatedState,\n                        status: 'finished'\n                    });\n                    // Update high score if needed\n                    await this.updateHighScore(playerUid, gameState.category, newPlayerScore);\n                }\n                return true;\n            } else {\n                // Incorrect guess - game over\n                const updatedState = {\n                    ...gameState,\n                    finished: true\n                };\n                await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(gameRef, {\n                    '__trendguesser.state': updatedState,\n                    status: 'finished'\n                });\n                // Update high score if needed\n                await this.updateHighScore(playerUid, gameState.category, player.score || 0);\n                return false;\n            }\n        } catch (error) {\n            console.error('Error making guess:', error);\n            throw error;\n        }\n    }\n    // End the game and update high scores\n    static async endGame(gameId, playerUid, finalScore) {\n        try {\n            // Handle mock mode\n            if (USE_MOCK_DATA && \"undefined\" !== 'undefined') {}\n            const gameRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'games', gameId.toUpperCase());\n            const gameDoc = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDoc)(gameRef);\n            if (!gameDoc.exists()) {\n                throw new Error('Game does not exist');\n            }\n            const gameData = gameDoc.data();\n            const gameState = gameData['__trendguesser.state'];\n            if (!gameState) {\n                throw new Error('No game state found');\n            }\n            // Only update if game was actually started\n            if (gameState.started) {\n                // Mark game as finished\n                await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(gameRef, {\n                    status: 'finished',\n                    '__trendguesser.state': {\n                        ...gameState,\n                        finished: true\n                    }\n                });\n                // Update high score if needed\n                await this.updateHighScore(playerUid, gameState.category, finalScore);\n            }\n        } catch (error) {\n            console.error('Error ending game:', error);\n            throw error;\n        }\n    }\n    // Create a new game session\n    static async createGame(createdBy, playerName) {\n        try {\n            // Generate a short 6-character game ID (uppercase)\n            const gameId = this.generateGameId();\n            if (USE_MOCK_DATA) {\n                console.log('Using mock data for game creation');\n                // Create an empty initial game state in sessionStorage for immediate access\n                if (false) {}\n                // Artificial delay to simulate network request\n                return new Promise((resolve)=>{\n                    setTimeout(()=>{\n                        resolve(gameId);\n                    }, 300);\n                });\n            }\n            const gameRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'games', gameId);\n            // Initialize player data\n            const playerData = {\n                uid: createdBy,\n                name: playerName || 'Player',\n                score: 0\n            };\n            // Initial game data\n            const gameData = {\n                id: gameId,\n                createdAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)(),\n                createdBy,\n                gameType: 'trendguesser',\n                status: 'waiting',\n                [createdBy]: playerData\n            };\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.setDoc)(gameRef, gameData);\n            return gameId;\n        } catch (error) {\n            console.error('Error creating game:', error);\n            if (USE_MOCK_DATA) {\n                console.log('Falling back to mock data due to error');\n                return this.generateGameId();\n            }\n            throw error;\n        }\n    }\n    // Fetch leaderboard for a category\n    static async getLeaderboard(category) {\n        try {\n            if (USE_MOCK_DATA) {\n                console.log('Using mock data for leaderboard');\n                // Sort and filter the mock leaderboard based on the requested category\n                return _mockData__WEBPACK_IMPORTED_MODULE_3__.sampleLeaderboard.filter((player)=>player.highScores && player.highScores[category]).sort((a, b)=>{\n                    const scoreA = a.highScores?.[category] || 0;\n                    const scoreB = b.highScores?.[category] || 0;\n                    return scoreB - scoreA;\n                }).slice(0, 10);\n            }\n            const leaderboardRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'leaderboard');\n            const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(leaderboardRef, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('category', '==', category), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)('score', 'desc'), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.limit)(10));\n            const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n            const leaderboard = [];\n            querySnapshot.forEach((doc)=>{\n                const data = doc.data();\n                leaderboard.push({\n                    uid: data.uid,\n                    name: data.name,\n                    score: data.score,\n                    highScores: data.highScores\n                });\n            });\n            return leaderboard;\n        } catch (error) {\n            console.error('Error fetching leaderboard:', error);\n            if (USE_MOCK_DATA) {\n                console.log('Falling back to mock data due to error');\n                return _mockData__WEBPACK_IMPORTED_MODULE_3__.sampleLeaderboard.slice(0, 10);\n            }\n            throw error;\n        }\n    }\n    // Helper methods\n    static async updateHighScore(playerUid, category, score) {\n        try {\n            // In mock mode, store high score in sessionStorage\n            if (USE_MOCK_DATA && \"undefined\" !== 'undefined') {}\n            const playerRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'players', playerUid);\n            const playerDoc = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDoc)(playerRef);\n            if (playerDoc.exists()) {\n                const playerData = playerDoc.data();\n                const currentHighScore = playerData.highScores?.[category] || 0;\n                if (score > currentHighScore) {\n                    // Update player's high score for this category\n                    await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(playerRef, {\n                        [`highScores.${category}`]: score\n                    });\n                    // Also update leaderboard if score is significant\n                    if (score > 5) {\n                        const leaderboardRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'leaderboard', `${category}_${playerUid}`);\n                        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.setDoc)(leaderboardRef, {\n                            uid: playerUid,\n                            name: playerData.name || 'Unknown Player',\n                            score,\n                            category,\n                            updatedAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n                        }, {\n                            merge: true\n                        });\n                    }\n                }\n            }\n        } catch (error) {\n            console.error('Error updating high score:', error);\n        // Don't throw, just log - this is a non-critical operation\n        }\n    }\n    static async fetchTermsByCategory(category) {\n        try {\n            if (USE_MOCK_DATA) {\n                console.log('Using mock data for search terms');\n                if (category === 'everything') {\n                    // Return all sample terms\n                    return _mockData__WEBPACK_IMPORTED_MODULE_3__.sampleSearchTerms;\n                } else if (category === 'latest') {\n                    // Return terms sorted by timestamp\n                    return [\n                        ..._mockData__WEBPACK_IMPORTED_MODULE_3__.sampleSearchTerms\n                    ].sort(()=>Math.random() - 0.5);\n                } else {\n                    // Filter by category\n                    const filteredTerms = _mockData__WEBPACK_IMPORTED_MODULE_3__.sampleSearchTerms.filter((term)=>term.category === category);\n                    return filteredTerms.length > 0 ? filteredTerms : _mockData__WEBPACK_IMPORTED_MODULE_3__.sampleSearchTerms;\n                }\n            }\n            const termsRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'searchTerms');\n            let q;\n            if (category === 'everything') {\n                // For \"everything\" category, get a mix of all categories\n                q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(termsRef, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.limit)(50));\n            } else if (category === 'latest') {\n                // For \"latest\", get the most recently added terms\n                q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(termsRef, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)('timestamp', 'desc'), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.limit)(50));\n            } else {\n                // For specific categories\n                q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(termsRef, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('category', '==', category), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.limit)(50));\n            }\n            const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n            const terms = [];\n            querySnapshot.forEach((doc)=>{\n                const data = doc.data();\n                terms.push({\n                    ...data,\n                    id: doc.id\n                });\n            });\n            return terms;\n        } catch (error) {\n            console.error('Error fetching terms:', error);\n            if (USE_MOCK_DATA) {\n                console.log('Falling back to mock data due to error');\n                return _mockData__WEBPACK_IMPORTED_MODULE_3__.sampleSearchTerms;\n            }\n            throw error;\n        }\n    }\n    static async fetchCustomTermWithRelated(customTerm) {\n        try {\n            // This would typically call a Firebase Function to get the custom term data\n            // For now, we'll simulate it with a placeholder\n            // First term will be the custom one\n            const customSearchTerm = {\n                id: (0,uuid__WEBPACK_IMPORTED_MODULE_2__.v4)(),\n                term: customTerm,\n                volume: Math.floor(Math.random() * 100) + 1,\n                category: 'custom',\n                imageUrl: `https://source.unsplash.com/featured/?${encodeURIComponent(customTerm)}`,\n                timestamp: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n            };\n            // For mock mode, just get some random terms from the sample data\n            if (USE_MOCK_DATA) {\n                const randomTerms = [\n                    ..._mockData__WEBPACK_IMPORTED_MODULE_3__.sampleSearchTerms\n                ].sort(()=>Math.random() - 0.5).slice(0, 10);\n                return [\n                    customSearchTerm,\n                    ...randomTerms\n                ];\n            }\n            // Then get some related terms from the database (random for now)\n            const termsRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'searchTerms');\n            const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(termsRef, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.limit)(20));\n            const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n            const terms = [\n                customSearchTerm\n            ];\n            querySnapshot.forEach((doc)=>{\n                const data = doc.data();\n                terms.push({\n                    ...data,\n                    id: doc.id\n                });\n            });\n            return terms;\n        } catch (error) {\n            console.error('Error fetching custom term:', error);\n            // Fallback to mock data for custom term\n            if (USE_MOCK_DATA) {\n                console.log('Falling back to mock data for custom term');\n                const customSearchTerm = {\n                    id: (0,uuid__WEBPACK_IMPORTED_MODULE_2__.v4)(),\n                    term: customTerm,\n                    volume: Math.floor(Math.random() * 100) + 1,\n                    category: 'custom',\n                    imageUrl: `https://source.unsplash.com/featured/?${encodeURIComponent(customTerm)}`,\n                    timestamp: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n                };\n                return [\n                    customSearchTerm,\n                    ..._mockData__WEBPACK_IMPORTED_MODULE_3__.sampleSearchTerms.slice(0, 10)\n                ];\n            }\n            throw error;\n        }\n    }\n    static shuffleTerms(terms) {\n        const shuffled = [\n            ...terms\n        ];\n        for(let i = shuffled.length - 1; i > 0; i--){\n            const j = Math.floor(Math.random() * (i + 1));\n            [shuffled[i], shuffled[j]] = [\n                shuffled[j],\n                shuffled[i]\n            ];\n        }\n        return shuffled;\n    }\n    static generateGameId() {\n        // Generate a 6-character alphanumeric code (uppercase)\n        const chars = 'ABCDEFGHJKLMNPQRSTUVWXYZ23456789'; // Removed confusable characters\n        let result = '';\n        for(let i = 0; i < 6; i++){\n            result += chars.charAt(Math.floor(Math.random() * chars.length));\n        }\n        return result;\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./src/lib/firebase/trendGuesserService.ts\n");

/***/ }),

/***/ "(pages-dir-node)/./src/pages/_app.tsx":
/*!****************************!*\
  !*** ./src/pages/_app.tsx ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/globals.css */ \"(pages-dir-node)/./src/styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/head */ \"next/head\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/router */ \"(pages-dir-node)/./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _contexts_ConsentContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../contexts/ConsentContext */ \"(pages-dir-node)/./src/contexts/ConsentContext.tsx\");\n/* harmony import */ var _contexts_AuthContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../contexts/AuthContext */ \"(pages-dir-node)/./src/contexts/AuthContext.tsx\");\n/* harmony import */ var _contexts_GameContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../contexts/GameContext */ \"(pages-dir-node)/./src/contexts/GameContext.tsx\");\n/* harmony import */ var _lib_firebase_firebase__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../lib/firebase/firebase */ \"(pages-dir-node)/./src/lib/firebase/firebase.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_contexts_AuthContext__WEBPACK_IMPORTED_MODULE_6__, _contexts_GameContext__WEBPACK_IMPORTED_MODULE_7__, _lib_firebase_firebase__WEBPACK_IMPORTED_MODULE_8__]);\n([_contexts_AuthContext__WEBPACK_IMPORTED_MODULE_6__, _contexts_GameContext__WEBPACK_IMPORTED_MODULE_7__, _lib_firebase_firebase__WEBPACK_IMPORTED_MODULE_8__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n\nfunction MyApp({ Component, pageProps }) {\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_4__.useRouter)();\n    const canonicalUrl = `https://trendguesser.com${router.asPath === \"/\" ? \"\" : router.asPath}`;\n    // Initialize Firebase immediately, not in useEffect\n    // This ensures Firebase is available before any components mount\n    if (false) {}\n    // Load fonts\n    (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)({\n        \"MyApp.useEffect\": ()=>{\n            // Load Oswald font for game-style text\n            const linkOswald = document.createElement('link');\n            linkOswald.rel = 'stylesheet';\n            linkOswald.href = 'https://fonts.googleapis.com/css2?family=Oswald:wght@400;500;700&display=swap';\n            document.head.appendChild(linkOswald);\n            // Load Press Start 2P for title/display text\n            const linkPressStart = document.createElement('link');\n            linkPressStart.rel = 'stylesheet';\n            linkPressStart.href = 'https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap';\n            document.head.appendChild(linkPressStart);\n            return ({\n                \"MyApp.useEffect\": ()=>{\n                    document.head.removeChild(linkOswald);\n                    document.head.removeChild(linkPressStart);\n                }\n            })[\"MyApp.useEffect\"];\n        }\n    }[\"MyApp.useEffect\"], []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_contexts_ConsentContext__WEBPACK_IMPORTED_MODULE_5__.ConsentProvider, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_contexts_AuthContext__WEBPACK_IMPORTED_MODULE_6__.AuthProvider, {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_contexts_GameContext__WEBPACK_IMPORTED_MODULE_7__.GameProvider, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_2___default()), {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                                children: \"TrendGuesser - the higher or lower game\"\n                            }, void 0, false, {\n                                fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n                                lineNumber: 48,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                                name: \"description\",\n                                content: \"TrendGuesser - the higher or lower game\"\n                            }, void 0, false, {\n                                fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n                                lineNumber: 49,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                                name: \"keywords\",\n                                content: \"trendguesser, higher or lower, game, single player, trending, search, game\"\n                            }, void 0, false, {\n                                fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n                                lineNumber: 53,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                                name: \"viewport\",\n                                content: \"width=device-width, initial-scale=1, maximum-scale=5\"\n                            }, void 0, false, {\n                                fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n                                lineNumber: 57,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                                rel: \"canonical\",\n                                href: canonicalUrl\n                            }, void 0, false, {\n                                fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n                                lineNumber: 63,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                                property: \"og:type\",\n                                content: \"website\"\n                            }, void 0, false, {\n                                fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n                                lineNumber: 66,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                                property: \"og:url\",\n                                content: canonicalUrl\n                            }, void 0, false, {\n                                fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n                                lineNumber: 67,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                                property: \"og:title\",\n                                content: \"TrendGuesser - the higher or lower game\"\n                            }, void 0, false, {\n                                fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n                                lineNumber: 68,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                                property: \"og:description\",\n                                content: \"TrendGuesser - the higher or lower game\"\n                            }, void 0, false, {\n                                fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n                                lineNumber: 72,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                                property: \"og:image\",\n                                content: \"https://trendguesser.com/images/social-cover.png\"\n                            }, void 0, false, {\n                                fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n                                lineNumber: 76,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                                property: \"og:image:width\",\n                                content: \"1200\"\n                            }, void 0, false, {\n                                fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n                                lineNumber: 80,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                                property: \"og:image:height\",\n                                content: \"630\"\n                            }, void 0, false, {\n                                fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n                                lineNumber: 81,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                                property: \"og:site_name\",\n                                content: \"Pyramid.Ninja\"\n                            }, void 0, false, {\n                                fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n                                lineNumber: 82,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                                property: \"og:locale\",\n                                content: \"en_US\"\n                            }, void 0, false, {\n                                fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n                                lineNumber: 83,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                                property: \"twitter:card\",\n                                content: \"summary_large_image\"\n                            }, void 0, false, {\n                                fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n                                lineNumber: 86,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                                property: \"twitter:url\",\n                                content: canonicalUrl\n                            }, void 0, false, {\n                                fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n                                lineNumber: 87,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                                property: \"twitter:title\",\n                                content: \"Pyramid.Ninja - The Digital Card Drinking Game\"\n                            }, void 0, false, {\n                                fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n                                lineNumber: 88,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                                property: \"twitter:description\",\n                                content: \"TrendGuesser - the higher or lower game\"\n                            }, void 0, false, {\n                                fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n                                lineNumber: 92,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                                property: \"twitter:image\",\n                                content: \"https://trendguesser.com/images/social-cover.png\"\n                            }, void 0, false, {\n                                fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n                                lineNumber: 96,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                                rel: \"icon\",\n                                href: \"/favicon.ico\"\n                            }, void 0, false, {\n                                fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n                                lineNumber: 102,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                                rel: \"preload\",\n                                href: \"https://fonts.googleapis.com/css2?family=Oswald:wght@400;500;700&display=swap\",\n                                as: \"style\"\n                            }, void 0, false, {\n                                fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n                                lineNumber: 105,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                                rel: \"preload\",\n                                href: \"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\",\n                                as: \"style\"\n                            }, void 0, false, {\n                                fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n                                lineNumber: 110,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n                        lineNumber: 46,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                        ...pageProps\n                    }, void 0, false, {\n                        fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n                        lineNumber: 116,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n                lineNumber: 45,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n            lineNumber: 44,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/alex/Developer/trendguesser/src/pages/_app.tsx\",\n        lineNumber: 43,\n        columnNumber: 5\n    }, this);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MyApp);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./src/pages/_app.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./src/pages/_document.tsx":
/*!*********************************!*\
  !*** ./src/pages/_document.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Document)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_document__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/document */ \"(pages-dir-node)/./node_modules/next/document.js\");\n/* harmony import */ var next_document__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_document__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction Document() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_document__WEBPACK_IMPORTED_MODULE_1__.Html, {\n        lang: \"en\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_document__WEBPACK_IMPORTED_MODULE_1__.Head, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        href: \"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\",\n                        rel: \"stylesheet\"\n                    }, void 0, false, {\n                        fileName: \"/Users/alex/Developer/trendguesser/src/pages/_document.tsx\",\n                        lineNumber: 8,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        href: \"https://fonts.googleapis.com/css2?family=Oswald:wght@400;500;700&display=swap\",\n                        rel: \"stylesheet\"\n                    }, void 0, false, {\n                        fileName: \"/Users/alex/Developer/trendguesser/src/pages/_document.tsx\",\n                        lineNumber: 12,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"apple-touch-icon\",\n                        sizes: \"180x180\",\n                        href: \"/favicons/apple-touch-icon.png\"\n                    }, void 0, false, {\n                        fileName: \"/Users/alex/Developer/trendguesser/src/pages/_document.tsx\",\n                        lineNumber: 18,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"icon\",\n                        type: \"image/png\",\n                        sizes: \"32x32\",\n                        href: \"/favicons/favicon-32x32.png\"\n                    }, void 0, false, {\n                        fileName: \"/Users/alex/Developer/trendguesser/src/pages/_document.tsx\",\n                        lineNumber: 19,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"icon\",\n                        type: \"image/png\",\n                        sizes: \"16x16\",\n                        href: \"/favicons/favicon-16x16.png\"\n                    }, void 0, false, {\n                        fileName: \"/Users/alex/Developer/trendguesser/src/pages/_document.tsx\",\n                        lineNumber: 20,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"icon\",\n                        href: \"/favicon.ico\"\n                    }, void 0, false, {\n                        fileName: \"/Users/alex/Developer/trendguesser/src/pages/_document.tsx\",\n                        lineNumber: 21,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"manifest\",\n                        href: \"/site.webmanifest\"\n                    }, void 0, false, {\n                        fileName: \"/Users/alex/Developer/trendguesser/src/pages/_document.tsx\",\n                        lineNumber: 22,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"theme-color\",\n                        content: \"#1b084e\"\n                    }, void 0, false, {\n                        fileName: \"/Users/alex/Developer/trendguesser/src/pages/_document.tsx\",\n                        lineNumber: 25,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"robots\",\n                        content: \"index, follow\"\n                    }, void 0, false, {\n                        fileName: \"/Users/alex/Developer/trendguesser/src/pages/_document.tsx\",\n                        lineNumber: 26,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"googlebot\",\n                        content: \"index, follow\"\n                    }, void 0, false, {\n                        fileName: \"/Users/alex/Developer/trendguesser/src/pages/_document.tsx\",\n                        lineNumber: 27,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"format-detection\",\n                        content: \"telephone=no\"\n                    }, void 0, false, {\n                        fileName: \"/Users/alex/Developer/trendguesser/src/pages/_document.tsx\",\n                        lineNumber: 28,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"application-name\",\n                        content: \"Pyramid.Ninja\"\n                    }, void 0, false, {\n                        fileName: \"/Users/alex/Developer/trendguesser/src/pages/_document.tsx\",\n                        lineNumber: 31,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"apple-mobile-web-app-capable\",\n                        content: \"yes\"\n                    }, void 0, false, {\n                        fileName: \"/Users/alex/Developer/trendguesser/src/pages/_document.tsx\",\n                        lineNumber: 32,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"apple-mobile-web-app-status-bar-style\",\n                        content: \"black-translucent\"\n                    }, void 0, false, {\n                        fileName: \"/Users/alex/Developer/trendguesser/src/pages/_document.tsx\",\n                        lineNumber: 33,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"apple-mobile-web-app-title\",\n                        content: \"Pyramid.Ninja\"\n                    }, void 0, false, {\n                        fileName: \"/Users/alex/Developer/trendguesser/src/pages/_document.tsx\",\n                        lineNumber: 34,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"mobile-web-app-capable\",\n                        content: \"yes\"\n                    }, void 0, false, {\n                        fileName: \"/Users/alex/Developer/trendguesser/src/pages/_document.tsx\",\n                        lineNumber: 35,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/alex/Developer/trendguesser/src/pages/_document.tsx\",\n                lineNumber: 6,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"body\", {\n                className: \"antialiased\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_document__WEBPACK_IMPORTED_MODULE_1__.Main, {}, void 0, false, {\n                        fileName: \"/Users/alex/Developer/trendguesser/src/pages/_document.tsx\",\n                        lineNumber: 38,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_document__WEBPACK_IMPORTED_MODULE_1__.NextScript, {}, void 0, false, {\n                        fileName: \"/Users/alex/Developer/trendguesser/src/pages/_document.tsx\",\n                        lineNumber: 39,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/alex/Developer/trendguesser/src/pages/_document.tsx\",\n                lineNumber: 37,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/alex/Developer/trendguesser/src/pages/_document.tsx\",\n        lineNumber: 5,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL3NyYy9wYWdlcy9fZG9jdW1lbnQudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE2RDtBQUU5QyxTQUFTSTtJQUN0QixxQkFDRSw4REFBQ0osK0NBQUlBO1FBQUNLLE1BQUs7OzBCQUNULDhEQUFDSiwrQ0FBSUE7O2tDQUVILDhEQUFDSzt3QkFDQ0MsTUFBSzt3QkFDTEMsS0FBSTs7Ozs7O2tDQUVOLDhEQUFDRjt3QkFDQ0MsTUFBSzt3QkFDTEMsS0FBSTs7Ozs7O2tDQUlOLDhEQUFDRjt3QkFBS0UsS0FBSTt3QkFBbUJDLE9BQU07d0JBQVVGLE1BQUs7Ozs7OztrQ0FDbEQsOERBQUNEO3dCQUFLRSxLQUFJO3dCQUFPRSxNQUFLO3dCQUFZRCxPQUFNO3dCQUFRRixNQUFLOzs7Ozs7a0NBQ3JELDhEQUFDRDt3QkFBS0UsS0FBSTt3QkFBT0UsTUFBSzt3QkFBWUQsT0FBTTt3QkFBUUYsTUFBSzs7Ozs7O2tDQUNyRCw4REFBQ0Q7d0JBQUtFLEtBQUk7d0JBQU9ELE1BQUs7Ozs7OztrQ0FDdEIsOERBQUNEO3dCQUFLRSxLQUFJO3dCQUFXRCxNQUFLOzs7Ozs7a0NBRzFCLDhEQUFDSTt3QkFBS0MsTUFBSzt3QkFBY0MsU0FBUTs7Ozs7O2tDQUNqQyw4REFBQ0Y7d0JBQUtDLE1BQUs7d0JBQVNDLFNBQVE7Ozs7OztrQ0FDNUIsOERBQUNGO3dCQUFLQyxNQUFLO3dCQUFZQyxTQUFROzs7Ozs7a0NBQy9CLDhEQUFDRjt3QkFBS0MsTUFBSzt3QkFBbUJDLFNBQVE7Ozs7OztrQ0FHdEMsOERBQUNGO3dCQUFLQyxNQUFLO3dCQUFtQkMsU0FBUTs7Ozs7O2tDQUN0Qyw4REFBQ0Y7d0JBQUtDLE1BQUs7d0JBQStCQyxTQUFROzs7Ozs7a0NBQ2xELDhEQUFDRjt3QkFBS0MsTUFBSzt3QkFBd0NDLFNBQVE7Ozs7OztrQ0FDM0QsOERBQUNGO3dCQUFLQyxNQUFLO3dCQUE2QkMsU0FBUTs7Ozs7O2tDQUNoRCw4REFBQ0Y7d0JBQUtDLE1BQUs7d0JBQXlCQyxTQUFROzs7Ozs7Ozs7Ozs7MEJBRTlDLDhEQUFDQztnQkFBS0MsV0FBVTs7a0NBQ2QsOERBQUNiLCtDQUFJQTs7Ozs7a0NBQ0wsOERBQUNDLHFEQUFVQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFJbkIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbGV4L0RldmVsb3Blci90cmVuZGd1ZXNzZXIvc3JjL3BhZ2VzL19kb2N1bWVudC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSHRtbCwgSGVhZCwgTWFpbiwgTmV4dFNjcmlwdCB9IGZyb20gXCJuZXh0L2RvY3VtZW50XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIERvY3VtZW50KCkge1xuICByZXR1cm4gKFxuICAgIDxIdG1sIGxhbmc9XCJlblwiPlxuICAgICAgPEhlYWQ+XG4gICAgICAgIHsvKiBMb2FkIGZvbnRzIGRpcmVjdGx5ICovfVxuICAgICAgICA8bGlua1xuICAgICAgICAgIGhyZWY9XCJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PVByZXNzK1N0YXJ0KzJQJmRpc3BsYXk9c3dhcFwiXG4gICAgICAgICAgcmVsPVwic3R5bGVzaGVldFwiXG4gICAgICAgIC8+XG4gICAgICAgIDxsaW5rIFxuICAgICAgICAgIGhyZWY9XCJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU9zd2FsZDp3Z2h0QDQwMDs1MDA7NzAwJmRpc3BsYXk9c3dhcFwiIFxuICAgICAgICAgIHJlbD1cInN0eWxlc2hlZXRcIlxuICAgICAgICAvPlxuICAgICAgICBcbiAgICAgICAgey8qIEZhdmljb24gYW5kIGFwcCBpY29ucyAqL31cbiAgICAgICAgPGxpbmsgcmVsPVwiYXBwbGUtdG91Y2gtaWNvblwiIHNpemVzPVwiMTgweDE4MFwiIGhyZWY9XCIvZmF2aWNvbnMvYXBwbGUtdG91Y2gtaWNvbi5wbmdcIiAvPlxuICAgICAgICA8bGluayByZWw9XCJpY29uXCIgdHlwZT1cImltYWdlL3BuZ1wiIHNpemVzPVwiMzJ4MzJcIiBocmVmPVwiL2Zhdmljb25zL2Zhdmljb24tMzJ4MzIucG5nXCIgLz5cbiAgICAgICAgPGxpbmsgcmVsPVwiaWNvblwiIHR5cGU9XCJpbWFnZS9wbmdcIiBzaXplcz1cIjE2eDE2XCIgaHJlZj1cIi9mYXZpY29ucy9mYXZpY29uLTE2eDE2LnBuZ1wiIC8+XG4gICAgICAgIDxsaW5rIHJlbD1cImljb25cIiBocmVmPVwiL2Zhdmljb24uaWNvXCIgLz5cbiAgICAgICAgPGxpbmsgcmVsPVwibWFuaWZlc3RcIiBocmVmPVwiL3NpdGUud2VibWFuaWZlc3RcIiAvPlxuICAgICAgICBcbiAgICAgICAgey8qIFNFTyBtZXRhIHRhZ3MgKi99XG4gICAgICAgIDxtZXRhIG5hbWU9XCJ0aGVtZS1jb2xvclwiIGNvbnRlbnQ9XCIjMWIwODRlXCIgLz5cbiAgICAgICAgPG1ldGEgbmFtZT1cInJvYm90c1wiIGNvbnRlbnQ9XCJpbmRleCwgZm9sbG93XCIgLz5cbiAgICAgICAgPG1ldGEgbmFtZT1cImdvb2dsZWJvdFwiIGNvbnRlbnQ9XCJpbmRleCwgZm9sbG93XCIgLz5cbiAgICAgICAgPG1ldGEgbmFtZT1cImZvcm1hdC1kZXRlY3Rpb25cIiBjb250ZW50PVwidGVsZXBob25lPW5vXCIgLz5cbiAgICAgICAgXG4gICAgICAgIHsvKiBNb2JpbGUvcmVzcG9uc2l2ZSBtZXRhIHRhZ3MgKi99XG4gICAgICAgIDxtZXRhIG5hbWU9XCJhcHBsaWNhdGlvbi1uYW1lXCIgY29udGVudD1cIlB5cmFtaWQuTmluamFcIiAvPlxuICAgICAgICA8bWV0YSBuYW1lPVwiYXBwbGUtbW9iaWxlLXdlYi1hcHAtY2FwYWJsZVwiIGNvbnRlbnQ9XCJ5ZXNcIiAvPlxuICAgICAgICA8bWV0YSBuYW1lPVwiYXBwbGUtbW9iaWxlLXdlYi1hcHAtc3RhdHVzLWJhci1zdHlsZVwiIGNvbnRlbnQ9XCJibGFjay10cmFuc2x1Y2VudFwiIC8+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJhcHBsZS1tb2JpbGUtd2ViLWFwcC10aXRsZVwiIGNvbnRlbnQ9XCJQeXJhbWlkLk5pbmphXCIgLz5cbiAgICAgICAgPG1ldGEgbmFtZT1cIm1vYmlsZS13ZWItYXBwLWNhcGFibGVcIiBjb250ZW50PVwieWVzXCIgLz5cbiAgICAgIDwvSGVhZD5cbiAgICAgIDxib2R5IGNsYXNzTmFtZT1cImFudGlhbGlhc2VkXCI+XG4gICAgICAgIDxNYWluIC8+XG4gICAgICAgIDxOZXh0U2NyaXB0IC8+XG4gICAgICA8L2JvZHk+XG4gICAgPC9IdG1sPlxuICApO1xufVxuIl0sIm5hbWVzIjpbIkh0bWwiLCJIZWFkIiwiTWFpbiIsIk5leHRTY3JpcHQiLCJEb2N1bWVudCIsImxhbmciLCJsaW5rIiwiaHJlZiIsInJlbCIsInNpemVzIiwidHlwZSIsIm1ldGEiLCJuYW1lIiwiY29udGVudCIsImJvZHkiLCJjbGFzc05hbWUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-node)/./src/pages/_document.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./src/styles/globals.css":
/*!********************************!*\
  !*** ./src/styles/globals.css ***!
  \********************************/
/***/ (() => {



/***/ }),

/***/ "firebase/analytics":
/*!*************************************!*\
  !*** external "firebase/analytics" ***!
  \*************************************/
/***/ ((module) => {

"use strict";
module.exports = import("firebase/analytics");;

/***/ }),

/***/ "firebase/app":
/*!*******************************!*\
  !*** external "firebase/app" ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = import("firebase/app");;

/***/ }),

/***/ "firebase/auth":
/*!********************************!*\
  !*** external "firebase/auth" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = import("firebase/auth");;

/***/ }),

/***/ "firebase/firestore":
/*!*************************************!*\
  !*** external "firebase/firestore" ***!
  \*************************************/
/***/ ((module) => {

"use strict";
module.exports = import("firebase/firestore");;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "next/dist/compiled/next-server/pages.runtime.dev.js":
/*!**********************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages.runtime.dev.js" ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/pages.runtime.dev.js");

/***/ }),

/***/ "next/head":
/*!****************************!*\
  !*** external "next/head" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/head");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react-dom":
/*!****************************!*\
  !*** external "react-dom" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-dom");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "react/jsx-runtime":
/*!************************************!*\
  !*** external "react/jsx-runtime" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-runtime");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "uuid":
/*!***********************!*\
  !*** external "uuid" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = import("uuid");;

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@swc"], () => (__webpack_exec__("(pages-dir-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F_error&preferredRegion=&absolutePagePath=private-next-pages%2F_error&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();